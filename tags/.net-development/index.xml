<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET Development on Jonathan&#39;s Blog</title>
    <link>https://jmezach.github.io/tags/.net-development/</link>
    <description>Recent content in .NET Development on Jonathan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Nov 2018 16:28:11 +0100</lastBuildDate>
    
	<atom:link href="https://jmezach.github.io/tags/.net-development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Porting from ASP.NET to ASP.NET Core: Part 3 - Mechanics of porting</title>
      <link>https://jmezach.github.io/post/porting-to-aspnet-core-part-three/</link>
      <pubDate>Fri, 23 Nov 2018 16:28:11 +0100</pubDate>
      
      <guid>https://jmezach.github.io/post/porting-to-aspnet-core-part-three/</guid>
      <description>This post is part of a series:
 Part 1: Introduction Part 2: Third party dependencies Part 3: Mechanics of porting Part 4: Deployment and packaging options  If you haven&amp;rsquo;t read any of the previous posts I recommend you do this now to get some context that I&amp;rsquo;ll be referring to in this post. If you have, continue on with the nitty gritty details of porting an app to ASP.</description>
    </item>
    
    <item>
      <title>Porting from ASP.NET to ASP.NET Core: Part 2 - Third party dependencies</title>
      <link>https://jmezach.github.io/post/porting-to-aspnet-core-part-two/</link>
      <pubDate>Wed, 07 Nov 2018 21:07:49 +0100</pubDate>
      
      <guid>https://jmezach.github.io/post/porting-to-aspnet-core-part-two/</guid>
      <description>This post is part of a series:
 Part 1: Introduction Part 2: Third party dependencies Part 3: Mechanics of porting Part 4: Deployment and packaging options  If you haven&amp;rsquo;t read the first post yet I suggest reading that first since it introduces the app that I&amp;rsquo;m porting and some of the reasons behind it.
Are my dependencies available on .NET Core? Most software these days consists of not just the code we write, but a lot of third party dependencies as well.</description>
    </item>
    
    <item>
      <title>Porting from ASP.NET to ASP.NET Core: Part 1 - Introduction</title>
      <link>https://jmezach.github.io/post/porting-to-aspnet-core-part-one/</link>
      <pubDate>Mon, 05 Nov 2018 21:45:50 +0100</pubDate>
      
      <guid>https://jmezach.github.io/post/porting-to-aspnet-core-part-one/</guid>
      <description>Last week I took to Twitter and asked if anyone of my followers would be interested in a session about .NET Core for developers that are using .NET Framework today. I wasn&amp;rsquo;t really expecting all that much by sending that tweet, but with a little help from Immo Landwerth who&amp;rsquo;s on the .NET team, that tweet seemed to have sparked quite a bit of interest in such a session. Perhaps the announcements that ASP.</description>
    </item>
    
    <item>
      <title>.NET Core Hackathon 2018</title>
      <link>https://jmezach.github.io/post/net-core-hackathon-2018/</link>
      <pubDate>Thu, 14 Jun 2018 20:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/post/net-core-hackathon-2018/</guid>
      <description>It has been a while since I&amp;rsquo;ve posted something here on my blog. That&amp;rsquo;s not because I haven&amp;rsquo;t done anything, just that I&amp;rsquo;ve been really busy lately with all kinds of things. For example, I&amp;rsquo;ve been delving into the container world and delivered a hands-on workshop with Kubernetes on Azure as part of the Global Azure Bootcamp 2018 back in April. That was a lot of fun, since I didn&amp;rsquo;t know much about Kubernetes before I started working on that, so I learned a lot in a relatively short amount of time, but I digress.</description>
    </item>
    
    <item>
      <title>Sharing code across .NET platforms with .NET Standard</title>
      <link>https://jmezach.github.io/post/sharing-code-across-dotnet-platforms-with-dotnet-standard/</link>
      <pubDate>Mon, 05 Dec 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/post/sharing-code-across-dotnet-platforms-with-dotnet-standard/</guid>
      <description>One of the key things that makes Xamarin such a great platform for developing mobile applications is that you can leverage your existing skills with C# and .NET and use them to create awesome Android and iOS apps. This also meant that you could take existing code written for .NET and use it in your Xamarin apps.
Of course, in the early days of MonoDroid and MonoTouch (before Xamarin was even a company) this wasn’t as easy as it is today.</description>
    </item>
    
    <item>
      <title>.NET Core versioning</title>
      <link>https://jmezach.github.io/post/dotnetcore-versioning/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/post/dotnetcore-versioning/</guid>
      <description>Unless you have been living underneath a rock you’ve probably noticed that yesterday, during Microsoft’s Connect() virtual event, .NET Core 1.1 was released. In addition ASP.NET Core 1.1 and Entity Framework 1.1 have been released. You can read up on the announcements in the following posts:
 .NET Core 1.1 - https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-net-core-1-1/ ASP.NET Core 1.1 - https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-net-core-1-1/ EF Core 1.1 - https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-entity-framework-core-1-1/  At first sight this doesn&amp;rsquo;t seem like much of a deal.</description>
    </item>
    
  </channel>
</rss>