<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.Net Core on Jonathan&#39;s Blog</title>
    <link>https://jmezach.github.io/tags/.net-core/</link>
    <description>Recent content in .Net Core on Jonathan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Sat, 13 May 2017 20:33:00 +0200</lastBuildDate>
    
	<atom:link href="https://jmezach.github.io/tags/.net-core/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>.NET Core and .NET Standard 2.0</title>
      <link>https://jmezach.github.io/2017/05/13/.net-core-and-.net-standard-2.0/</link>
      <pubDate>Sat, 13 May 2017 20:33:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2017/05/13/.net-core-and-.net-standard-2.0/</guid>
      <description>This week I’ve attended Microsoft’s Build conference in beautiful Seattle. It has a been a very busy week, but we had a lot of fun attending the different sessions as well as talking to some of the members on the various product teams.
Of course, during the week, my focus has been on .NET Core. I’ve attended most (if not all) of the sessions on .NET Core (and related technologies such as ASP.</description>
    </item>
    
    <item>
      <title>My experience with my first .NET Core contribution</title>
      <link>https://jmezach.github.io/2017/04/15/my-experience-with-my-first-.net-core-contribution/</link>
      <pubDate>Sat, 15 Apr 2017 15:36:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2017/04/15/my-experience-with-my-first-.net-core-contribution/</guid>
      <description>I’ve written quite a few blogs here on how you can use .NET Core in your applications and what to expect when developing for this new platform. But with .NET Core being open source there’s also another story to be told, namely that of extending and improving the platform itself through open source contributions. So when Karel Zikmund from the .NET Core team reached out on Twitter asking the community to help them fix bugs before the .</description>
    </item>
    
    <item>
      <title>Migrating existing .NET projects to SDK-based projects</title>
      <link>https://jmezach.github.io/2017/02/07/migrating-existing-.net-projects-to-sdk-based-projects/</link>
      <pubDate>Tue, 07 Feb 2017 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2017/02/07/migrating-existing-.net-projects-to-sdk-based-projects/</guid>
      <description>In my previous blog post I talked about sharing .NET code across the various .NET platforms we now have within the .NET ecosystem (.NET Framework, .NET Core, Xamarin). In that post I also showed the new tooling within Visual Studio 2017 that enables (among other things) cross-targeting a lot easier than it was before. Since then two new versions of the new tooling experience for .NET projects have been released, and things have matured quite nicely.</description>
    </item>
    
    <item>
      <title>Sharing code across .NET platforms with .NET Standard</title>
      <link>https://jmezach.github.io/2016/12/05/sharing-code-across-.net-platforms-with-.net-standard/</link>
      <pubDate>Mon, 05 Dec 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2016/12/05/sharing-code-across-.net-platforms-with-.net-standard/</guid>
      <description>One of the key things that makes Xamarin such a great platform for developing mobile applications is that you can leverage your existing skills with C# and .NET and use them to create awesome Android and iOS apps. This also meant that you could take existing code written for .NET and use it in your Xamarin apps.
Of course, in the early days of MonoDroid and MonoTouch (before Xamarin was even a company) this wasn’t as easy as it is today.</description>
    </item>
    
    <item>
      <title>.NET Core versioning</title>
      <link>https://jmezach.github.io/2016/11/18/.net-core-versioning/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2016/11/18/.net-core-versioning/</guid>
      <description>Unless you have been living underneath a rock you’ve probably noticed that yesterday, during Microsoft’s Connect() virtual event, .NET Core 1.1 was released. In addition ASP.NET Core 1.1 and Entity Framework 1.1 have been released. You can read up on the announcements in the following posts:
 .NET Core 1.1 - https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-net-core-1-1/ ASP.NET Core 1.1 - https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-net-core-1-1/ EF Core 1.1 - https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-entity-framework-core-1-1/  At first sight this doesn&amp;rsquo;t seem like much of a deal.</description>
    </item>
    
    <item>
      <title>.NET Platform Standard and the magic of &#34;imports&#34;</title>
      <link>https://jmezach.github.io/2016/05/24/.net-platform-standard-and-the-magic-of-imports/</link>
      <pubDate>Tue, 24 May 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2016/05/24/.net-platform-standard-and-the-magic-of-imports/</guid>
      <description>In case you missed it, .NET Core RC2 has been released by Microsoft last week along with ASP.NET Core RC2 and a preview of the tooling. Lots of exciting new stuff that I highly encourage checking out.
Now that RC2 is out there I guess a lot more people will be checking it out and playing with it and there’s one topic that seems to confuse a lot of people.</description>
    </item>
    
    <item>
      <title>Developing for .NET Core</title>
      <link>https://jmezach.github.io/2016/04/22/developing-for-.net-core/</link>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2016/04/22/developing-for-.net-core/</guid>
      <description>If you’ve read my previous post you know that I have a keen interest in .NET Core. For the last two weeks I’ve been installing new RC2 builds on my machine almost on a daily basis to see if I could get something working and I’m glad to see that as of a couple of days ago things seem to be coming together. Obviously it still is a bit of a moving target but I feel like a lot of things are starting to settle.</description>
    </item>
    
    <item>
      <title>.NET Core at Build 2016</title>
      <link>https://jmezach.github.io/2016/04/02/.net-core-at-build-2016/</link>
      <pubDate>Sat, 02 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://jmezach.github.io/2016/04/02/.net-core-at-build-2016/</guid>
      <description>As some of you might have seen on Twitter or Facebook I have attended Microsoft’s Build 2016 conference in San Francisco over the last week. It was an interesting experience with some good announcements, although to be honest I was expecting a little bit more. Then again Microsoft has become a lot more open about what they are doing which kind of takes the thunder away from these conferences. Free Xamarin, Azure Service Fabric generally available, Microsoft Cognitive Services and the Bot Framework are still great announcements though.</description>
    </item>
    
  </channel>
</rss>